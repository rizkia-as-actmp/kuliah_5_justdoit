import{_ as e,c as t,a2 as n,o as r}from"./chunks/framework.CHKAMmNZ.js";const m=JSON.parse('{"title":"Presentation Layer 🎨","description":"","frontmatter":{},"headers":[],"relativePath":"flutter-architecture-and-structure/presentation-layer.md","filePath":"flutter-architecture-and-structure/presentation-layer.md"}'),i={name:"flutter-architecture-and-structure/presentation-layer.md"};function o(s,a,l,d,g,p){return r(),t("div",null,a[0]||(a[0]=[n('<h1 id="presentation-layer" tabindex="-1">Presentation Layer 🎨 <a class="header-anchor" href="#presentation-layer" aria-label="Permalink to &quot;Presentation Layer :art:&quot;">​</a></h1><hr><p>Presentation layer adalah bagian yang bertugas menangani tampilan dan interaksi pengguna. Pada layer ini, terdapat tiga komponen utama, yaitu <strong>Widget</strong>, <strong>State</strong>, dan <strong>Controller</strong>. Berikut penjelasan masing-masing komponen:</p><br><h2 id="widget" tabindex="-1"><strong>Widget</strong> ✏️ <a class="header-anchor" href="#widget" aria-label="Permalink to &quot;**Widget** :pencil2:&quot;">​</a></h2><p>Salah satu komponen inti pada presentation layer adalah <strong>Widget</strong>. Dalam Flutter, semua elemen yang membangun aplikasi merupakan widget. Bahkan aplikasi itu sendiri sebenarnya adalah sebuah widget.</p><p>Widget dapat berupa:</p><ul><li><strong>StatelessWidget</strong>: Widget yang tidak memiliki state dan hanya menampilkan data statis.</li><li><strong>StatefulWidget</strong>: Widget yang memiliki state dan dapat berubah-ubah sesuai interaksi pengguna atau data yang diperoleh.</li></ul><br><h2 id="state" tabindex="-1"><strong>State</strong> 🔄 <a class="header-anchor" href="#state" aria-label="Permalink to &quot;**State** :arrows_counterclockwise:&quot;">​</a></h2><p>State adalah kondisi atau keadaan yang dimiliki oleh sebuah widget. <strong>State</strong> menentukan bagaimana widget ditampilkan pada UI.</p><p>Contoh berbagai kondisi state:</p><ul><li><strong>Loading State</strong>: Widget ditampilkan sebagai animasi loading (misalnya, spinner berputar-putar).</li><li><strong>Error State</strong>: Widget menampilkan dialog berwarna merah untuk memberi tahu pengguna bahwa ada kesalahan.</li><li><strong>Data State</strong>: Widget menampilkan data yang telah diperoleh dan siap dipresentasikan kepada pengguna.</li></ul><p><strong>State</strong> yang beragam dan dinamis inilah yang menjadi dasar bagaimana widget di-render pada layar.</p><br><h2 id="controller" tabindex="-1"><strong>Controller</strong> 🎛️ <a class="header-anchor" href="#controller" aria-label="Permalink to &quot;**Controller** :control_knobs:&quot;">​</a></h2><p><strong>Controller</strong> bertugas menghubungkan presentation layer dengan application layer. Tugas utama controller meliputi:</p><ol><li>Berkomunikasi langsung dengan <strong>Service</strong> pada application layer untuk mendapatkan atau memproses data.</li><li>Mengubah <strong>State</strong> dari satu kondisi ke kondisi lainnya, seperti dari <strong>Loading State</strong> ke <strong>Data State</strong>, atau dari <strong>Error State</strong> ke kondisi lain.</li></ol><p>Controller membantu memastikan bahwa setiap perubahan state tercermin pada UI secara real-time.</p><br><h2 id="referensi" tabindex="-1">Referensi 📚 <a class="header-anchor" href="#referensi" aria-label="Permalink to &quot;Referensi :books:&quot;">​</a></h2><ul><li><a href="https://codewithandrea.com/articles/flutter-presentation-layer/" target="_blank" rel="noreferrer">Andrea Bizzotto: Flutter Presentation Layer</a></li></ul>',22)]))}const h=e(i,[["render",o]]);export{m as __pageData,h as default};
