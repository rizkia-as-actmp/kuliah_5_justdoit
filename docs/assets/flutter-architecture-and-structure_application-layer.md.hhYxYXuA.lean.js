import{_ as e,c as i,a2 as t,o as r}from"./chunks/framework.CHKAMmNZ.js";const g=JSON.parse('{"title":"Application Layer 🔌","description":"","frontmatter":{},"headers":[],"relativePath":"flutter-architecture-and-structure/application-layer.md","filePath":"flutter-architecture-and-structure/application-layer.md"}'),n={name:"flutter-architecture-and-structure/application-layer.md"};function l(o,a,s,c,p,u){return r(),i("div",null,a[0]||(a[0]=[t('<h1 id="application-layer" tabindex="-1">Application Layer 🔌 <a class="header-anchor" href="#application-layer" aria-label="Permalink to &quot;Application Layer :electric_plug:&quot;">​</a></h1><hr><p>Application layer adalah bagian di mana <strong>application-specific logic</strong> (atau yang secara umum disbut bussines-logic) berada. Layer ini bertugas menyediakan logic diantara <strong>controller</strong>, yang mengelola state dari widget, dengan <strong>repository</strong>, yang berkomunikasi dengan API.</p><p>Pada layer ini, kita akan membuat <strong>service</strong>. Service inilah tempat logic berada seperti berkomunikasi dengan satu atau lebih repository, baik dalam satu fitur maupun lintas fitur.</p><div class="info custom-block"><p class="custom-block-title">Note</p><p>Pada arsitektur lain seperti MVC atau MVVM, application-specific logic sering kali digabungkan menjadi satu dengan model.</p></div><br><h2 id="kapan-menggunakan-application-layer" tabindex="-1"><strong>Kapan Menggunakan Application Layer?</strong> ⏳ <a class="header-anchor" href="#kapan-menggunakan-application-layer" aria-label="Permalink to &quot;**Kapan Menggunakan Application Layer?** :hourglass_flowing_sand:&quot;">​</a></h2><p>Kita dapat menggunakan atau membuat application layer ketika:</p><ul><li>Membuat sebuah logic yang membutuhkan komunikasi dengan banyak repository.</li><li>Logic tersebut digunakan di berbagai tempat dan oleh berbagai widget, baik dalam satu fitur maupun antar fitur.</li></ul><div class="info custom-block"><p class="custom-block-title">INFO</p><p>Menurut Andrea Bizzotto, sering kali kita tidak membutuhkan service class. Jika logic yang dibuat sederhana, di mana controller cukup langsung memanggil fungsi repository, maka sebenarnya service class tidak diperlukan.</p></div><br><h2 id="referensi" tabindex="-1">Referensi 📚 <a class="header-anchor" href="#referensi" aria-label="Permalink to &quot;Referensi :books:&quot;">​</a></h2><ul><li><a href="https://codewithandrea.com/articles/flutter-app-architecture-application-layer/" target="_blank" rel="noreferrer">Code with Andrea: Flutter App Architecture - Application Layer</a></li></ul>',13)]))}const m=e(n,[["render",l]]);export{g as __pageData,m as default};
